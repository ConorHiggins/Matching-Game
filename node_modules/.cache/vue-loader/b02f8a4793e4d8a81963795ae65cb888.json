{"remainingRequest":"/Users/teamwork/Develop/Matching-Game/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/teamwork/Develop/Matching-Game/src/components/Card.vue?vue&type=style&index=0&id=3d18e8c4&scoped=true&lang=scss&","dependencies":[{"path":"/Users/teamwork/Develop/Matching-Game/src/components/Card.vue","mtime":1594780003557},{"path":"/Users/teamwork/Develop/Matching-Game/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/teamwork/Develop/Matching-Game/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/teamwork/Develop/Matching-Game/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/teamwork/Develop/Matching-Game/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/teamwork/Develop/Matching-Game/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/teamwork/Develop/Matching-Game/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiLi4vc3R5bGVzL21peGlucy9hbmltYXRpb25zIjsKCiRzZWxmOiAiLmNhcmQiOwouY2FyZCB7CiAgd2lkdGg6IGF1dG87CiAgaGVpZ2h0OiAyMDBweDsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgZm9udC1zaXplOiAxOHB4OwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZhYjkxOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBjdXJzb3I6IHBvaW50ZXI7CiAgYm9yZGVyOiA0cHggc29saWQgI2ZmM2UwMjsKCiAgJl9fY292ZXIgewogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIGhlaWdodDogMTAwJTsKICAgIHdpZHRoOiAxMDAlOwogIH0KCiAgJl9fY29udGVudCB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgZGlzcGxheTogbm9uZTsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIGhlaWdodDogMTAwJTsKICAgIHdpZHRoOiAxMDAlOwogIH0KCiAgaW1nIHsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxMDAlOwogICAgb2JqZWN0LWZpdDogY292ZXI7CiAgfQp9CgouY2FyZC0tdmlzaWJsZSwKLmNhcmQtLW1hdGNoZWQgewogICN7JHNlbGZ9X19jb3ZlciB7CiAgICBkaXNwbGF5OiBub25lOwogIH0KCiAgI3skc2VsZn1fX2NvbnRlbnQgewogICAgZGlzcGxheTogZmxleDsKICB9Cn0KCi5jYXJkLS1tYXRjaGVkIHsKICBAaW5jbHVkZSByb3RhdGUtb3V0Owp9CgouY2FyZC0tdmlzaWJsZSB7CiAgQGluY2x1ZGUgcHVsc2U7Cn0K"},{"version":3,"sources":["Card.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Card.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div\n    @click=\"click\"\n    :class=\"[\n      'card', 'card--'+cardState\n    ]\">\n    <span class=\"card__cover\"></span>\n\n    <span class=\"card__content\">\n      <img :src=\"item.avatar\">\n    </span>\n  </div>\n</template>\n\n<script>\n  import { mapState, mapActions } from 'vuex'\n\n  export default {\n    name: 'Card',\n    data: function(){\n      return {\n        cardState: 'hidden'\n      }\n    },\n    props: [\n      'item'\n    ],\n    computed: {\n      ...mapState([\n        'selection',\n        'matched'\n      ])\n    },\n    methods: {\n      ...mapActions([\n        'updateSelection',\n        'clearSelection',\n        'updateMatched'\n      ]),\n      click: function(){\n        // if the card is already matched\n        //    then ignore\n        if (this.cardState == 'matched'){\n          return;\n        }\n\n        // if the card is visible,\n        //    then deselect it in the store\n        //    and set cardStatus to hidden\n        if (this.cardState == 'visible'){\n          this.cardState = \"hidden\";\n          this.clearSelection(this.item.key);\n        }\n\n        // if the card is hidden\n        //     then check the store for an exising key\n        //     and mark as matched if it exist\n        //     OR reset the selection if another was previously selected\n        else {\n          this.cardState = \"visible\";\n          if (this.selection.indexOf(this.item.key) > -1 ){\n            this.updateMatched(this.item.key);\n          }\n          else {\n            this.updateSelection(this.item.key);\n            // this.clearSelection();\n          }\n        }\n      }\n    },\n\n    watch: {\n      selection(newValue) {\n        if (this.cardState === 'matched') {\n          return;\n        }\n\n        if (newValue.length >= 2){\n          setTimeout(() => {\n            this.cardState = 'hidden'\n            this.clearSelection();\n          }, 500)\n        }\n      },\n      matched(newValue) {\n        if (newValue.indexOf(this.item.key) > -1) {\n          this.cardState = 'matched';\n        }\n      },\n    },\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n\n  @import \"../styles/mixins/animations\";\n\n  $self: \".card\";\n  .card {\n    width: auto;\n    height: 200px;\n    border-radius: 4px;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #ffab91;\n    position: relative;\n    cursor: pointer;\n    border: 4px solid #ff3e02;\n\n    &__cover {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      position: absolute;\n      height: 100%;\n      width: 100%;\n    }\n\n    &__content {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      display: none;\n      position: absolute;\n      height: 100%;\n      width: 100%;\n    }\n\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n\n  .card--visible,\n  .card--matched {\n    #{$self}__cover {\n      display: none;\n    }\n\n    #{$self}__content {\n      display: flex;\n    }\n  }\n\n  .card--matched {\n    @include rotate-out;\n  }\n\n  .card--visible {\n    @include pulse;\n  }\n</style>\n"]}]}