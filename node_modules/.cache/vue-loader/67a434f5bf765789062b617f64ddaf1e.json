{"remainingRequest":"/Users/teamwork/Develop/Matching-Game/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/teamwork/Develop/Matching-Game/src/components/Board.vue?vue&type=style&index=0&id=ae5a289a&scoped=true&lang=scss&","dependencies":[{"path":"/Users/teamwork/Develop/Matching-Game/src/components/Board.vue","mtime":1594781275539},{"path":"/Users/teamwork/Develop/Matching-Game/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/teamwork/Develop/Matching-Game/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/teamwork/Develop/Matching-Game/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/teamwork/Develop/Matching-Game/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/teamwork/Develop/Matching-Game/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/teamwork/Develop/Matching-Game/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaDEgewogIG1hcmdpbjogMDsKfQoKLmJvYXJkIHsKICBoZWlnaHQ6IDEwMCU7CiAgZmxleDogMSAwIGF1dG87CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIHBhZGRpbmc6IDAgMTVweDsKCiAgJl9fb3ZlcmxheSB7CiAgICBmbGV4OiAxIDAgYXV0bzsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIH0KCiAgJl9fY2FyZHMgewogICAgZGlzcGxheTogZ3JpZDsKICAgIGdyaWQtZ2FwOiAxNXB4OwogICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgyMDBweCwgMmZyKSk7CiAgfQp9Cg=="},{"version":3,"sources":["Board.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Board.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"board\">\n    <div class=\"board__overlay\"\n      v-if=\"(gameStatus !== 'active')\">\n      <h1>\n        Well Done!\n      </h1>\n      <h2>\n        Score: {{score}}\n      </h2>\n\n      <a href=\"javascript:;\"\n        @click=\"restart\">\n        Play Again\n      </a>\n    </div>\n    <div class=\"board__cards\"\n      v-if=\"(gameStatus == 'active')\">\n      <div\n        v-for=\"(c, i) in visibleCards\"\n        :key=\"i\">\n        <Card\n          :item=\"c\"\n          :index=\"i\"/>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { mapState, mapActions } from 'vuex'\n  import Card from '../components/Card.vue'\n\n  export default {\n    name: 'Board',\n    computed: {\n      // mix the getters into computed with object spread operator\n      ...mapState([\n        'score',\n        'cardCount',\n        'matched',\n        'selection'\n      ]),\n      visibleCards: (vm) => {\n        const baseValues = Array.from(Array(vm.cardCount/1).keys());\n\n        const mapped = baseValues.map((v) => {\n          return {\n            key: v,\n            avatar: `https://api.adorable.io/avatars/128/match${v}.png`\n          }\n        });\n\n        const shuffleArray = arr => arr\n          .map(a => [Math.random(), a])\n          .sort((a, b) => a[0] - b[0])\n          .map(a => a[1]);\n\n        return shuffleArray([].concat(mapped, mapped));\n      },\n      gameStatus: (vm) => {\n        if (vm.cardCount == vm.matched.length) {\n          return 'complete';\n        }\n        else {\n          return 'active';\n        }\n      }\n    },\n    components: {\n      Card,\n    },\n    methods: {\n      ...mapActions({\n        decrease: 'decreaseScore',\n        restart: 'resetGame'\n      })\n    },\n    watch: {\n      selection(newValue) {\n        if (newValue.length >= 2){\n          console.log('decrease it!');\n          setTimeout(() => {\n            this.decrease(5);\n          }, 500)\n        }\n      },\n    },\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n  h1 {\n    margin: 0;\n  }\n\n  .board {\n    height: 100%;\n    flex: 1 0 auto;\n    display: flex;\n    flex-direction: column;\n    padding: 0 15px;\n\n    &__overlay {\n      flex: 1 0 auto;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n    }\n\n    &__cards {\n      display: grid;\n      grid-gap: 15px;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 2fr));\n    }\n  }\n</style>\n"]}]}